{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenne\\\\Projects\\\\Fall-Project\\\\SDHex\\\\hex\\\\src\\\\Game.js\";\nimport Deck from \"card-deck\";\nimport React from \"react\"; //import { render } from \"react-dom\";\n\nimport Cambio from \"./components/Cambio\";\nimport Hand from \"./components/Hand\";\nimport DrawPile from \"./components/DrawPile\";\nimport DiscardPile from \"./components/DiscardPile\";\n/*\nclass Cambio extends React.Component {\n  render(){\n    return (\n      <button onClick = {this.props.onClick}>Cambio!!</button>\n    )\n  };\n};\n\nclass Card extends React.Component {\n  render(){\n    //if(this.props.value === null){return;}\n    return (<button onClick = {this.props.onClick}>Card {this.props.pos}: {this.props.value}</button>) \n  };\n};\n\nclass Hand extends React.Component {\n renderCard(i){\n   return <Card onClick = {() => this.props.onClick(i)} pos = {i + 1} value = {this.props.hand[i]}/>\n }\n render(){\n  var cardHand = [];\n  for(var i = 0; i < this.props.hand.length; i++){\n    cardHand.push(this.renderCard(i));\n  }\n    return (\n      <div>{cardHand}</div>\n      /*\n      <div>\n        <div className=\"card-row\">\n          {this.renderCard(2)}\n          {this.renderCard(3)}\n        </div>\n        <div className=\"card-row\">\n        {this.renderCard(0)}\n          {this.renderCard(1)}\n        </div>\n      </div>\n      \n    )\n  };\n};\n\n\nclass DrawPile extends React.Component {\n  /*\n  Display next card face down\n  1. On click, reveal card\n  2a. Click on discard pile to discard\n  2b. Click on a card in hand to swap\n  \n  render(){\n    if(this.props.swap){\n      return (\n        <div>\n          <button onClick = {this.props.onClick}>Draw</button>\n          <div>Currently Drawn: <button>Swap: {this.props.card}</button></div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <button onClick = {this.props.onClick}>Draw</button>\n        <div>Currently Drawn: {this.props.card}</div>\n      </div>\n    )\n  };\n};\n\nclass DiscardPile extends React.Component {\n  //Display last discarded card\n  render(){\n    if(!this.props.stick){\n      return (\n        <div>\n          <button onClick = {this.props.onClick}>Discard</button>\n          <div>Last Discarded: {this.props.card}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <button onClick = {this.props.onClick}>Discard</button>\n        <div>Last Discarded: <button>Stick: {this.props.card}</button>\n        </div>\n      </div>\n    );\n  };\n};\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  /*\n  State for turn, different actions for start and end\n  */\n  //eventHandler\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: true,\n      // Decks\n      drawpile: new Deck([]),\n      discardpile: new Deck([]),\n      // actions allowed on turn\n      stick: false,\n      draw: false,\n      swap: false,\n      discard: false,\n      last_drawn: null,\n      // top of draw pile\n      last_discarded: null,\n      // top of discard pile\n      //actions completed on turn\n      swapped: false,\n      stuck: false,\n      // Hand\n      hand: [null, null, null, null],\n      card_selected: null // card in hand currently selected\n\n    };\n  }\n\n  onStart() {\n    if (!this.state.start) {\n      return;\n    }\n\n    var cards = [[\"2\", \"D\"], [\"2\", \"C\"], [\"2\", \"H\"], [\"2\", \"S\"], [\"3\", \"D\"], [\"3\", \"C\"], [\"3\", \"H\"], [\"3\", \"S\"], [\"4\", \"D\"], [\"4\", \"C\"], [\"4\", \"H\"], [\"4\", \"S\"], [\"5\", \"D\"], [\"5\", \"C\"], [\"5\", \"H\"], [\"5\", \"S\"], [\"6\", \"D\"], [\"6\", \"C\"], [\"6\", \"H\"], [\"6\", \"S\"], [\"7\", \"D\"], [\"7\", \"C\"], [\"7\", \"H\"], [\"7\", \"S\"], [\"8\", \"D\"], [\"7\", \"C\"], [\"7\", \"H\"], [\"7\", \"S\"], [\"9\", \"D\"], [\"9\", \"C\"], [\"9\", \"H\"], [\"9\", \"S\"], [\"10\", \"D\"], [\"10\", \"C\"], [\"10\", \"H\"], [\"10\", \"S\"], [\"j\", \"D\"], [\"j\", \"C\"], [\"j\", \"H\"], [\"j\", \"S\"], [\"q\", \"D\"], [\"q\", \"C\"], [\"q\", \"H\"], [\"q\", \"S\"], [\"k\", \"D\"], [\"k\", \"C\"], [\"k\", \"H\"], [\"k\", \"S\"], [\"a\", \"D\"], [\"a\", \"C\"], [\"a\", \"H\"], [\"a\", \"S\"]];\n    var playing_cards = new Deck(cards);\n    playing_cards.shuffle();\n    this.setState({\n      start: false,\n      draw: true,\n      hand: playing_cards.draw(4),\n      drawpile: playing_cards\n    });\n  }\n\n  onDrawPileClick() {\n    if (!this.state.draw) {\n      return;\n    }\n\n    var card = this.state.drawpile.draw(1);\n\n    if (!card) {\n      return;\n    } // no cards to draw\n\n\n    this.setState({\n      //actions avaiable\n      draw: false,\n      swap: false,\n      stick: false,\n      discard: true,\n      last_drawn: card,\n      drawpile: this.state.drawpile,\n      swapped: false\n    });\n  }\n\n  onDiscardClick() {\n    if (!this.state.discard) {\n      return;\n    }\n\n    this.setState({\n      //actions available\n      draw: true,\n      swap: false,\n      stick: false,\n      discard: false,\n      discardpile: this.state.discardpile.addToTop(this.state.last_drawn),\n      last_discarded: this.state.last_drawn,\n      last_drawn: null\n    });\n  }\n\n  toggleSwap() {\n    if (this.state.swapped) {\n      return;\n    }\n\n    if (this.state.last_drawn === null) {\n      return;\n    }\n\n    if (this.state.swap) {\n      this.setState({\n        swap: false\n      });\n    } else {\n      this.setState({\n        swap: true\n      });\n    }\n  }\n\n  toggleStick() {\n    if (this.state.last_discarded === null) {\n      return;\n    }\n\n    if (this.state.stick) {\n      this.setState({\n        stick: false\n      });\n    } else {\n      this.setState({\n        stick: true\n      });\n    }\n  }\n\n  onHandClick(i) {\n    if (this.state.start) {\n      return;\n    }\n\n    if (this.state.card_selected == null || this.state.card_selected === i) {\n      this.toggleSwap();\n      this.toggleStick();\n    }\n\n    if (this.state.card_selected === i) {\n      this.setState({\n        card_selected: null\n      });\n    } else {\n      this.setState({\n        card_selected: i\n      });\n    }\n  }\n\n  onSwapClick() {\n    if (this.state.swapped) {\n      return;\n    }\n\n    var card = this.state.hand[this.state.card_selected];\n    var new_hand = this.state.hand;\n    new_hand[this.state.card_selected] = this.state.last_drawn;\n    this.setState({\n      card_selected: null,\n      hand: new_hand,\n      last_drawn: card,\n      swapped: true\n    });\n  }\n\n  onStickClick() {}\n\n  handScore() {\n    var hand = [this.state.hand[0], this.state.hand[1], this.state.hand[2], this.state.hand[3]];\n    var total_score = 0;\n\n    for (var i = 0; i < 4; i++) {\n      var card = hand[i];\n\n      if (card[0] === \"k\" && (card[1] === \"D\" || card[1] === \"H\")) {\n        total_score -= 1;\n      } else if (card[0] === \"j\" || card[0] === \"q\" || card[0] === \"k\") {\n        total_score += 10;\n      } else if (card[0] === \"a\") {\n        total_score += 1;\n      } else {\n        total_score += parseInt(card[0]);\n      }\n    }\n\n    return total_score;\n  }\n\n  callCambio() {\n    if (this.state.start) {\n      return;\n    }\n\n    var total_score = this.handScore();\n    alert(\"Score: \" + total_score);\n    this.setState({\n      start: true,\n      draw: false,\n      swap: false,\n      discard: false,\n      drawpile: new Deck([]),\n      discardpile: new Deck([]),\n      last_discarded: null,\n      last_drawn: null,\n      hand: [null, null, null, null]\n    });\n  }\n\n  render() {\n    //diamonds(D), cloves(C), hearts(H), spades(S)\n    //2-10, j,q,k,a\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Cambio, {\n        onClick: () => this.callCambio()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.onStart(),\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DrawPile, {\n          handleDraw: () => this.onDrawPileClick(),\n          handleSwap: () => this.onSwapClick(),\n          card: this.state.last_drawn,\n          swap: this.state.swap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiscardPile, {\n          handleDiscard: () => this.onDiscardClick(),\n          handleStick: () => this.onStickClick(),\n          stick: this.state.stick,\n          last_discard: this.state.last_discarded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header1\", {\n          children: \"Your Hand: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Hand, {\n          onClick: i => this.onHandClick(i),\n          hand: this.state.hand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default Game;","map":{"version":3,"sources":["C:/Users/kenne/Projects/Fall-Project/SDHex/hex/src/Game.js"],"names":["Deck","React","Cambio","Hand","DrawPile","DiscardPile","Game","Component","constructor","props","state","start","drawpile","discardpile","stick","draw","swap","discard","last_drawn","last_discarded","swapped","stuck","hand","card_selected","onStart","cards","playing_cards","shuffle","setState","onDrawPileClick","card","onDiscardClick","addToTop","toggleSwap","toggleStick","onHandClick","i","onSwapClick","new_hand","onStickClick","handScore","total_score","parseInt","callCambio","alert","render"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AACjC;AACF;AACA;AACE;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEX;AACAC,MAAAA,QAAQ,EAAE,IAAIZ,IAAJ,CAAS,EAAT,CAHC;AAIXa,MAAAA,WAAW,EAAE,IAAIb,IAAJ,CAAS,EAAT,CAJF;AAKX;AACAc,MAAAA,KAAK,EAAE,KANI;AAOXC,MAAAA,IAAI,EAAE,KAPK;AAQXC,MAAAA,IAAI,EAAE,KARK;AASXC,MAAAA,OAAO,EAAE,KATE;AAWXC,MAAAA,UAAU,EAAE,IAXD;AAWO;AAClBC,MAAAA,cAAc,EAAE,IAZL;AAYW;AAEtB;AACAC,MAAAA,OAAO,EAAE,KAfE;AAgBXC,MAAAA,KAAK,EAAE,KAhBI;AAkBX;AACAC,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IA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","sourcesContent":["import Deck from \"card-deck\";\nimport React from \"react\";\n//import { render } from \"react-dom\";\nimport Cambio from \"./components/Cambio\";\nimport Hand from \"./components/Hand\";\nimport DrawPile from \"./components/DrawPile\";\nimport DiscardPile from \"./components/DiscardPile\";\n/*\nclass Cambio extends React.Component {\n  render(){\n    return (\n      <button onClick = {this.props.onClick}>Cambio!!</button>\n    )\n  };\n};\n\nclass Card extends React.Component {\n  render(){\n    //if(this.props.value === null){return;}\n    return (<button onClick = {this.props.onClick}>Card {this.props.pos}: {this.props.value}</button>) \n  };\n};\n\nclass Hand extends React.Component {\n renderCard(i){\n   return <Card onClick = {() => this.props.onClick(i)} pos = {i + 1} value = {this.props.hand[i]}/>\n }\n render(){\n  var cardHand = [];\n  for(var i = 0; i < this.props.hand.length; i++){\n    cardHand.push(this.renderCard(i));\n  }\n    return (\n      <div>{cardHand}</div>\n      /*\n      <div>\n        <div className=\"card-row\">\n          {this.renderCard(2)}\n          {this.renderCard(3)}\n        </div>\n        <div className=\"card-row\">\n        {this.renderCard(0)}\n          {this.renderCard(1)}\n        </div>\n      </div>\n      \n    )\n  };\n};\n\n\nclass DrawPile extends React.Component {\n  /*\n  Display next card face down\n  1. On click, reveal card\n  2a. Click on discard pile to discard\n  2b. Click on a card in hand to swap\n  \n  render(){\n    if(this.props.swap){\n      return (\n        <div>\n          <button onClick = {this.props.onClick}>Draw</button>\n          <div>Currently Drawn: <button>Swap: {this.props.card}</button></div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <button onClick = {this.props.onClick}>Draw</button>\n        <div>Currently Drawn: {this.props.card}</div>\n      </div>\n    )\n  };\n};\n\nclass DiscardPile extends React.Component {\n  //Display last discarded card\n  render(){\n    if(!this.props.stick){\n      return (\n        <div>\n          <button onClick = {this.props.onClick}>Discard</button>\n          <div>Last Discarded: {this.props.card}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <button onClick = {this.props.onClick}>Discard</button>\n        <div>Last Discarded: <button>Stick: {this.props.card}</button>\n        </div>\n      </div>\n    );\n  };\n};\n*/\nclass Game extends React.Component {\n  /*\n  State for turn, different actions for start and end\n  */\n  //eventHandler\n  constructor(props){\n    super(props);\n    this.state = {\n      start: true,\n      // Decks\n      drawpile: new Deck([]),\n      discardpile: new Deck([]),\n      // actions allowed on turn\n      stick: false,\n      draw: false,\n      swap: false,\n      discard: false,\n\n      last_drawn: null, // top of draw pile\n      last_discarded: null, // top of discard pile\n\n      //actions completed on turn\n      swapped: false,\n      stuck: false,\n\n      // Hand\n      hand: [null, null, null, null],\n      card_selected: null, // card in hand currently selected\n    };\n  };\n  onStart(){\n    if(!this.state.start){return;}\n    var cards = [\n      [\"2\", \"D\"],[\"2\", \"C\"],[\"2\", \"H\"],[\"2\", \"S\"],\n      [\"3\", \"D\"],[\"3\", \"C\"],[\"3\", \"H\"],[\"3\", \"S\"],\n      [\"4\", \"D\"],[\"4\", \"C\"],[\"4\", \"H\"],[\"4\", \"S\"],\n      [\"5\", \"D\"],[\"5\", \"C\"],[\"5\", \"H\"],[\"5\", \"S\"],\n      [\"6\", \"D\"],[\"6\", \"C\"],[\"6\", \"H\"],[\"6\", \"S\"],\n      [\"7\", \"D\"],[\"7\", \"C\"],[\"7\", \"H\"],[\"7\", \"S\"],\n      [\"8\", \"D\"],[\"7\", \"C\"],[\"7\", \"H\"],[\"7\", \"S\"],\n      [\"9\", \"D\"],[\"9\", \"C\"],[\"9\", \"H\"],[\"9\", \"S\"],\n      [\"10\", \"D\"],[\"10\", \"C\"],[\"10\", \"H\"],[\"10\", \"S\"],\n      [\"j\", \"D\"],[\"j\", \"C\"],[\"j\", \"H\"],[\"j\", \"S\"],\n      [\"q\", \"D\"],[\"q\", \"C\"],[\"q\", \"H\"],[\"q\", \"S\"],\n      [\"k\", \"D\"],[\"k\", \"C\"],[\"k\", \"H\"],[\"k\", \"S\"],\n      [\"a\", \"D\"],[\"a\", \"C\"],[\"a\", \"H\"],[\"a\", \"S\"],\n    ];\n    var playing_cards = new Deck(cards);\n    playing_cards.shuffle();\n    this.setState({\n      start: false,\n      draw: true,\n      hand: playing_cards.draw(4),\n      drawpile: playing_cards,\n    })\n  }\n  onDrawPileClick(){\n    if(!this.state.draw){return;}\n    var card = this.state.drawpile.draw(1);\n    if(!card){return;} // no cards to draw\n    this.setState({\n      //actions avaiable\n      draw: false,\n      swap: false,\n      stick: false,\n      discard: true,\n\n\n      last_drawn: card,\n      drawpile: this.state.drawpile,\n      swapped: false,\n    })\n    \n  };\n  onDiscardClick(){\n    if(!this.state.discard){return;}\n    this.setState({\n      //actions available\n      draw: true,\n      swap: false,\n      stick: false,\n      discard: false,\n\n      discardpile: this.state.discardpile.addToTop(this.state.last_drawn),\n      last_discarded: this.state.last_drawn,\n      last_drawn: null,\n    })\n  };\n\n  toggleSwap(){\n    if(this.state.swapped){return;}\n    if(this.state.last_drawn === null){return;}\n    if(this.state.swap){\n      this.setState({\n        swap: false,\n      })\n    }\n    else{\n      this.setState({\n        swap: true,\n      })\n    }\n  }\n  toggleStick(){\n    if(this.state.last_discarded === null){return;}\n    if(this.state.stick){\n      this.setState({\n        stick: false,\n      })\n    }\n    else{\n      this.setState({\n        stick: true,\n      })\n    }\n  }\n  onHandClick(i){\n    if(this.state.start){return;}\n    if(this.state.card_selected == null || this.state.card_selected === i){\n      this.toggleSwap();\n      this.toggleStick();\n    }\n    if(this.state.card_selected === i){\n      this.setState({\n        card_selected: null,\n      })\n    }\n    else{\n      this.setState({\n        card_selected: i,\n      })\n    }\n  };\n\n  onSwapClick(){\n    if(this.state.swapped){return;}\n    var card = this.state.hand[this.state.card_selected];\n    var new_hand = this.state.hand;\n    new_hand[this.state.card_selected] = this.state.last_drawn;\n    this.setState({\n      card_selected: null,\n      hand: new_hand,\n      last_drawn: card,\n      swapped: true,\n    })\n  };\n  onStickClick(){\n\n  };\n\n  handScore(){\n    var hand = [\n    this.state.hand[0],\n    this.state.hand[1],\n    this.state.hand[2],\n    this.state.hand[3],\n    ];\n    var total_score = 0;\n    for(var i = 0; i < 4; i++){\n      var card = hand[i];\n      if(card[0] === \"k\" && (card[1] === \"D\" || card[1] === \"H\")){\n        total_score -= 1;\n      }\n      else if(card[0] === \"j\" || card[0] === \"q\" || card[0] === \"k\"){\n        total_score += 10;\n      }\n      else if(card[0] === \"a\"){\n        total_score += 1;\n      }\n      else{\n        total_score += parseInt(card[0]);\n      }\n    }\n    return total_score;\n  };\n  callCambio(){\n    if(this.state.start){return;}\n    var total_score = this.handScore();\n    alert(\"Score: \" + total_score);\n    this.setState({\n      start: true,\n      draw: false,\n      swap: false,\n      discard: false,\n\n      drawpile: new Deck([]),\n      discardpile: new Deck([]),\n      last_discarded: null,\n      last_drawn: null,\n      hand: [null, null, null, null],\n    })\n  };\n\n\n  render(){\n    //diamonds(D), cloves(C), hearts(H), spades(S)\n    //2-10, j,q,k,a\n    return (\n      <div>\n        <Cambio \n        onClick = {() => this.callCambio()}\n        />\n        <button onClick = {() => this.onStart()}>start</button>\n        <div>\n          <DrawPile\n          handleDraw = {() => this.onDrawPileClick()}\n          handleSwap = {() => this.onSwapClick()}\n          card = {this.state.last_drawn}\n          swap = {this.state.swap}\n          />\n          <DiscardPile\n          handleDiscard = {() => this.onDiscardClick()}\n          handleStick = {() => this.onStickClick()}\n          stick = {this.state.stick}\n          last_discard = {this.state.last_discarded}\n          />\n        </div>\n        <div>\n          <header1>Your Hand: </header1>\n          <Hand\n          onClick = {(i) => this.onHandClick(i)}\n          hand = {this.state.hand}\n          />\n        </div>\n      \n      </div>\n    )\n  };\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}