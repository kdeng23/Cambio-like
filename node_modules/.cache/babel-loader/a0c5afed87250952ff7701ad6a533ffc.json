{"ast":null,"code":"'use strict'; // Logic adapted from https://github.com/lodash/lodash-compat/blob/master/lodash.js\n// As most of this is back-compatibility for older browsers, omit these\n// impossible-to-test-in-modern-node paths from coverage reporting\n\nvar arrayTag = '[object Array]';\n/* istanbul ignore next */\n\nfunction isValidLength(val) {\n  // Ignoring the max-safe-integer rule because that's too many cards for any deck\n  return typeof val === 'number' && val > -1 && val % 1 === 0;\n}\n/* istanbul ignore next */\n\n\nfunction isObjecty(val) {\n  return !!val && typeof val === 'object';\n}\n/* istanbul ignore next */\n\n\nfunction isArray(arr) {\n  var isObject = isObjecty(arr);\n  var hasLengthProperty = isValidLength(arr.length);\n  return isObject && hasLengthProperty && Object.toString.call(arr) === arrayTag;\n}\n/* istanbul ignore next */\n// Try the native method first, then fall back to our back-compatibility method\n\n\nmodule.exports = Array.isArray || isArray;","map":{"version":3,"sources":["C:/Users/kenne/Projects/Fall-Project/cambio-like/node_modules/card-deck/lib/is-array.js"],"names":["arrayTag","isValidLength","val","isObjecty","isArray","arr","isObject","hasLengthProperty","length","Object","toString","call","module","exports","Array"],"mappings":"AAAA,a,CACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAG,gBAAf;AAEA;;AACA,SAASC,aAAT,CAAwBC,GAAxB,EAA8B;AAC5B;AACA,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,GAAG,CAAC,CAAlC,IAAuCA,GAAG,GAAG,CAAN,KAAY,CAA1D;AACD;AAED;;;AACA,SAASC,SAAT,CAAoBD,GAApB,EAA0B;AACxB,SAAO,CAAE,CAAEA,GAAJ,IAAW,OAAOA,GAAP,KAAe,QAAjC;AACD;AAED;;;AACA,SAASE,OAAT,CAAkBC,GAAlB,EAAwB;AACtB,MAAIC,QAAQ,GAAIH,SAAS,CAAEE,GAAF,CAAzB;AACA,MAAIE,iBAAiB,GAAGN,aAAa,CAAEI,GAAG,CAACG,MAAN,CAArC;AACA,SAAOF,QAAQ,IAAIC,iBAAZ,IAAiCE,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAsBN,GAAtB,MAAgCL,QAAxE;AACD;AAED;AACA;;;AACAY,MAAM,CAACC,OAAP,GAAiBC,KAAK,CAACV,OAAN,IAAiBA,OAAlC","sourcesContent":["'use strict';\n// Logic adapted from https://github.com/lodash/lodash-compat/blob/master/lodash.js\n// As most of this is back-compatibility for older browsers, omit these\n// impossible-to-test-in-modern-node paths from coverage reporting\n\nvar arrayTag = '[object Array]';\n\n/* istanbul ignore next */\nfunction isValidLength( val ) {\n  // Ignoring the max-safe-integer rule because that's too many cards for any deck\n  return typeof val === 'number' && val > -1 && val % 1 === 0;\n}\n\n/* istanbul ignore next */\nfunction isObjecty( val ) {\n  return ! ! val && typeof val === 'object';\n}\n\n/* istanbul ignore next */\nfunction isArray( arr ) {\n  var isObject =  isObjecty( arr );\n  var hasLengthProperty = isValidLength( arr.length );\n  return isObject && hasLengthProperty && Object.toString.call( arr ) === arrayTag;\n}\n\n/* istanbul ignore next */\n// Try the native method first, then fall back to our back-compatibility method\nmodule.exports = Array.isArray || isArray;\n"]},"metadata":{},"sourceType":"script"}