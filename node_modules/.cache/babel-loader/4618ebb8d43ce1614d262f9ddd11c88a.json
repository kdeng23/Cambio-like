{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenne\\\\Projects\\\\Fall-Project\\\\SDHex\\\\hex\\\\src\\\\Game.js\";\n\n/*\nThree main components (consisting of card components):\nFace-down Draw Pile (Deck of 52 or less)\nFace-up Discard Pile (Deck of 0 or less)\nHand (array of 4 distinct cards)\n\n*/\nimport Deck from \"card-deck\";\nimport React from \"react\";\nimport { render } from \"react-dom\"; //import { Deck } from \"card-deck\"\n//import Deck from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Hand extends React.Component {\n  /*\n  Four face down cards\n  */\n  render() {\n    return [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Card 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Card 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Card 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Card 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)];\n  }\n\n}\n\n;\n\nclass DrawPile extends React.Component {\n  /*\n  Display next card face down\n  1. On click, reveal card\n  2a. Click on discard pile to discard\n  2b. Click on a card in hand to swap\n  */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.props.onClick,\n      children: [\" Draw Pile: \", this.props.card]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nclass DiscardPile extends React.Component {\n  //Display last discarded card\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.props.onClick,\n      children: [\"Discard Pile: \", this.props.card]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\n\nclass Game extends React.Component {\n  /*\n  State for turn, different actions for start and end\n  */\n  constructor(props) {\n    super(props);\n    this.state = {\n      //Decks\n      drawpile: new Deck([69, 70, 71]),\n      discardpile: new Deck([]),\n      //actions allowed on turn\n      draw: true,\n      swap: false,\n      discard: false,\n      last_drawn: null,\n      //top of draw pile\n      last_discarded: null //top of discard pile\n\n    };\n  }\n\n  onDrawPileClick() {\n    if (!this.state.draw) {\n      return;\n    } //this.state.current = this.state.drawpile.draw(1);\n\n\n    this.setState({\n      draw: false,\n      swap: true,\n      discard: true,\n      last_drawn: this.state.drawpile.draw(1),\n      drawpile: this.state.drawpile\n    });\n  }\n\n  onDiscardPileClick() {\n    if (!this.state.discard) {\n      return;\n    }\n\n    this.setState({\n      draw: true,\n      swap: false,\n      discard: false,\n      discardpile: this.state.discardpile.addToTop(this.state.last_drawn),\n      last_discarded: this.state.last_drawn,\n      last_drawn: null\n    });\n  }\n\n  onHandClick() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: \"Cambio!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header1\", {\n        children: \"Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawPile, {\n        onClick: () => this.onDrawPileClick(),\n        card: this.state.last_drawn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header1\", {\n        children: \"Discard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiscardPile, {\n        onClick: () => this.onDiscardPileClick(),\n        card: this.state.last_discarded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header1\", {\n        children: \"Your Hand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hand, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default Game;","map":{"version":3,"sources":["C:/Users/kenne/Projects/Fall-Project/SDHex/hex/src/Game.js"],"names":["Deck","React","render","Hand","Component","DrawPile","props","onClick","card","DiscardPile","Game","constructor","state","drawpile","discardpile","draw","swap","discard","last_drawn","last_discarded","onDrawPileClick","setState","onDiscardPileClick","addToTop","onHandClick"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CACA;AACA;;;;AAGA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AACjC;AACF;AACA;AACEF,EAAAA,MAAM,GAAE;AACN,WACE,cACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,CADF;AAQD;;AAbgC;;AAclC;;AAED,MAAMG,QAAN,SAAuBJ,KAAK,CAACG,SAA7B,CAAuC;AACrC;AACF;AACA;AACA;AACA;AACA;AACEF,EAAAA,MAAM,GAAE;AACN,wBACE;AAAQ,MAAA,OAAO,EAAI,KAAKI,KAAL,CAAWC,OAA9B;AAAA,iCAAoD,KAAKD,KAAL,CAAWE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAXoC;;AAYtC;;AAED,MAAMC,WAAN,SAA0BR,KAAK,CAACG,SAAhC,CAA0C;AACxC;AACAF,EAAAA,MAAM,GAAE;AACN,wBACI;AAAQ,MAAA,OAAO,EAAI,KAAKI,KAAL,CAAWC,OAA9B;AAAA,mCAAsD,KAAKD,KAAL,CAAWE,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AANuC;;AAOzC;;AAED,MAAME,IAAN,SAAmBT,KAAK,CAACG,SAAzB,CAAmC;AACjC;AACF;AACA;AACEO,EAAAA,WAAW,CAACL,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKM,KAAL,GAAa;AACX;AACAC,MAAAA,QAAQ,EAAE,IAAIb,IAAJ,CAAS,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CAAT,CAFC;AAGXc,MAAAA,WAAW,EAAE,IAAId,IAAJ,CAAS,EAAT,CAHF;AAIX;AACAe,MAAAA,IAAI,EAAE,IALK;AAMXC,MAAAA,IAAI,EAAE,KANK;AAOXC,MAAAA,OAAO,EAAE,KAPE;AASXC,MAAAA,UAAU,EAAE,IATD;AASO;AAClBC,MAAAA,cAAc,EAAE,IAVL,CAUW;;AAVX,KAAb;AAYD;;AAEDC,EAAAA,eAAe,GAAE;AACf,QAAG,CAAC,KAAKR,KAAL,CAAWG,IAAf,EAAoB;AAAC;AAAQ,KADd,CAEf;;;AACA,SAAKM,QAAL,CAAc;AACZN,MAAAA,IAAI,EAAE,KADM;AAEZC,MAAAA,IAAI,EAAE,IAFM;AAGZC,MAAAA,OAAO,EAAE,IAHG;AAIZC,MAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoBE,IAApB,CAAyB,CAAzB,CAJA;AAKZF,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AALT,KAAd;AAOD;;AACDS,EAAAA,kBAAkB,GAAE;AAClB,QAAG,CAAC,KAAKV,KAAL,CAAWK,OAAf,EAAuB;AAAC;AAAQ;;AAChC,SAAKI,QAAL,CAAc;AACZN,MAAAA,IAAI,EAAE,IADM;AAEZC,MAAAA,IAAI,EAAE,KAFM;AAGZC,MAAAA,OAAO,EAAE,KAHG;AAIZH,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAAX,CAAuBS,QAAvB,CAAgC,KAAKX,KAAL,CAAWM,UAA3C,CAJD;AAKZC,MAAAA,cAAc,EAAE,KAAKP,KAAL,CAAWM,UALf;AAMZA,MAAAA,UAAU,EAAE;AANA,KAAd;AAQD;;AACDM,EAAAA,WAAW,GAAE,CAAE;;AAEftB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AACA,QAAA,OAAO,EAAI,MAAM,KAAKkB,eAAL,EADjB;AAEA,QAAA,IAAI,EAAI,KAAKR,KAAL,CAAWM;AAFnB;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,WAAD;AACA,QAAA,OAAO,EAAI,MAAM,KAAKI,kBAAL,EADjB;AAEA,QAAA,IAAI,EAAI,KAAKV,KAAL,CAAWO;AAFnB;AAAA;AAAA;AAAA;AAAA,cARF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA9DgC;;AA+DlC;AAED,eAAeT,IAAf","sourcesContent":["/*\nThree main components (consisting of card components):\nFace-down Draw Pile (Deck of 52 or less)\nFace-up Discard Pile (Deck of 0 or less)\nHand (array of 4 distinct cards)\n\n*/\n\nimport Deck from \"card-deck\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\n//import { Deck } from \"card-deck\"\n//import Deck from \"react\";\n\n\nclass Hand extends React.Component {\n  /*\n  Four face down cards\n  */\n  render(){\n    return (\n      [\n      <button>Card 1</button>,\n      <button>Card 2</button>,\n      <button>Card 3</button>,\n      <button>Card 4</button>\n      ]\n    )\n  };\n};\n\nclass DrawPile extends React.Component {\n  /*\n  Display next card face down\n  1. On click, reveal card\n  2a. Click on discard pile to discard\n  2b. Click on a card in hand to swap\n  */\n  render(){\n    return (\n      <button onClick = {this.props.onClick}> Draw Pile: {this.props.card}</button>\n    )\n  };\n};\n\nclass DiscardPile extends React.Component {\n  //Display last discarded card\n  render(){\n    return (\n        <button onClick = {this.props.onClick}>Discard Pile: {this.props.card}</button>\n    );\n  };\n};\n\nclass Game extends React.Component {\n  /*\n  State for turn, different actions for start and end\n  */\n  constructor(props){\n    super(props);\n    this.state = {\n      //Decks\n      drawpile: new Deck([69,70,71]),\n      discardpile: new Deck([]),\n      //actions allowed on turn\n      draw: true,\n      swap: false,\n      discard: false,\n\n      last_drawn: null, //top of draw pile\n      last_discarded: null, //top of discard pile\n    };\n  };\n  \n  onDrawPileClick(){\n    if(!this.state.draw){return;}\n    //this.state.current = this.state.drawpile.draw(1);\n    this.setState({\n      draw: false,\n      swap: true,\n      discard: true,\n      last_drawn: this.state.drawpile.draw(1),\n      drawpile: this.state.drawpile,\n    })\n  };\n  onDiscardPileClick(){\n    if(!this.state.discard){return;}\n    this.setState({\n      draw: true,\n      swap: false,\n      discard: false,\n      discardpile: this.state.discardpile.addToTop(this.state.last_drawn),\n      last_discarded: this.state.last_drawn,\n      last_drawn: null,\n    })\n  };\n  onHandClick(){};\n\n  render(){\n    return (\n      <div>\n        <header>Cambio!!</header>\n        <header1>Draw</header1>\n        <DrawPile\n        onClick = {() => this.onDrawPileClick()}\n        card = {this.state.last_drawn}\n        />\n        <header1>Discard</header1>\n        <DiscardPile\n        onClick = {() => this.onDiscardPileClick()}\n        card = {this.state.last_discarded}\n        />\n        <header1>Your Hand</header1>\n        <Hand/>\n      </div>\n    )\n  };\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}